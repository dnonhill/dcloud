serviceAccountName: dcloud

securityContext:
  runAsUser: 1001

replicaCount: 1

image:
  repository: dcloudnexus-registry.pttdigital.com/dcloud/dcloud
  tag: production-v0.0.4
  pullPolicy: Always

imagePullSecrets:
  - name: registry-irrnexus-cred

nameOverride: dcloud-production-passwordmanager
fullnameOverride: dcloud-production-passwordmanager

env:
  - name: DCLOUD_VERSION
    value: "undefined"
  - name: DCLOUD_GIT_HASH
    value: "undefined"
  - name: DCLOUD_DEPLOY_DATE
    value: "undefined"
  - name: POSTGRES_DB
    value: dcloud
  - name: POSTGRES_USER
    value: dcloudadmin
  - name: POSTGRES_HOST
    value: 10.224.65.107
  - name: DCLOUD_FORCE_SECURE_REQUEST
    value: true
  - name: TZ
    value: 'Asia/Bangkok'
  - name: GRAYLOG_HOST
    value: "dcloudgraylog.pttdigital.com"
  - name: GRAYLOG_HANDLER_CLASS
    value: "graypy.handler.GELFTCPHandler"
  - name: DCLOUD_APPLICATION_MODE
    value: ldap_change_password
envFrom:
  - secret:
      name: dcloud-psql

volumeMounts:
  - name: dcloud-prd-app-static-volume
    mountPath: /code/static

# Make sure to create pvc on destination first
volumes:
  - name: dcloud-prd-app-static-volume
    persistentVolumeClaim:
      claimName: dcloud-prd-app-static-volume-storage

containerPorts:
  - 8000

resources:
  requests:
    cpu: 100m
    memory: 50Mi
  limits:
    cpu: 500m
    memory: 512Mi

service:
  enabled: true
  type: ClusterIP
  annotation: {}
  ports:
    - name: app-svc
      protocol: TCP
      externalPort: 8000
      internalPort: 8000

route:
  enabled: true
  routes:
    - name: dcloud-production-passwordmanager-route
      spec:
        host: passwordmanager.pttdigital.com
        path: /
        to:
          kind: Service
          name: dcloud-production-passwordmanager
          weight: 100
        port:
          targetPort: app-svc
        wildcardPolicy: None
        # tls:
        #   termination: edge
        #   certificate: "CHANGEME"
        #   key: |
        #     CHANGEME
        #   caCertificate: |
        #     CHANGEME
        #   insecureEdgeTerminationPolicy: Redirect

# healthCheck:
#   enabled: false
#   readinessProbe:
#     httpGet:
#       path: /ready
#       port: 80
#     initialDelaySeconds: 0
#     timeoutSeconds: 1
#     periodSeconds: 10
#     successThreshold: 1
#     failureThreshold: 3
#   livenessProbe:
#     httpGet:
#       path: /health
#       port: 80
#     initialDelaySeconds: 0
#     timeoutSeconds: 1
#     periodSeconds: 10
#     successThreshold: 1
#     failureThreshold: 3
