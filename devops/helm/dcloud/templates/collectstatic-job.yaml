{{- if .Values.collectstatic }}
---
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ include "app-deployment.fullname" . }}-collect-static
  labels:
    app.kubernetes.io/name: {{ include "app-deployment.name" . }}
    helm.sh/chart: {{ include "app-deployment.chart" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    helm.sh/revision: {{ .Release.Revision | quote }}
  annotations:
    # This is what defines this resource as a hook. Without this line, the
    # job is considered part of the release.
    helm.sh/hook: pre-install,pre-upgrade
    helm.sh/hook-delete-policy: before-hook-creation
spec:
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ template "app-deployment.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
      {{- if .Values.collectstatic.securityContext }}
      {{- if .Values.collectstatic.securityContext.runAsUser }}
      securityContext:
        runAsUser: {{ .Values.collectstatic.securityContext.runAsUser }}
      {{- end }}
      {{- else if .Values.securityContext }}
      {{- if .Values.securityContext.runAsUser }}
      securityContext:
        runAsUser: {{ .Values.securityContext.runAsUser }}
      {{- end }}
      {{- end }}
      {{- if .Values.serviceAccountName }}
      serviceAccountName: {{ .Values.serviceAccountName }}
      {{- end }}
      {{- if .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- range .Values.imagePullSecrets }}
        - name: {{ .name }}
        {{- end }}
      {{- end }}
      restartPolicy: "OnFailure"
      containers:
        - name: {{ include "app-deployment.name" . }}-collect-static
          image: "{{ .Values.collectstatic.image.repository }}:{{ .Values.collectstatic.image.tag }}"
          imagePullPolicy: {{ .Values.collectstatic.image.pullPolicy }}
          command:
            - sh
            - -c
            - /bin/rm -rf /code/static/* && /usr/local/bin/python3.8 manage.py collectstatic --no-input && /usr/local/bin/python3.8 manage.py migrate
          {{ if .Values.collectstatic.env }}
          env:
          {{- range .Values.collectstatic.env }}
            - name: {{ .name }}
              {{- if .secret }}
              valueFrom:
                secretKeyRef:
                  name: {{ .secret.name }}
                  key: {{ .secret.key }}
              {{- else if .configmap }}
              valueFrom:
                configMapKeyRef:
                  name: {{ .configmap.name | default (include "app-deployment.fullname" $) }}
                  key: {{ .configmap.key }}
              {{- else }}
              value: {{ .value | quote }}
              {{- end }}
            {{- end }}
          {{- end }}
          {{- if .Values.envFrom }}
          envFrom:
            # envFrom_sample
            # envFrom:
            # - prefix: PF_ (prefix is optional)
            #   secret:
            #     name: db-secret
            # - configmap:
            #     name: app-configmap (use app's fullname if not defined)
            {{- range .Values.envFrom }}
            - {{ if .secret -}}
              secretRef:
                name: {{ .secret.name }}
              {{ else if .configmap -}}
              configMapRef:
                name: {{ .configmap.name | default (include "app-deployment.fullname" $) }}
              {{- end }}
              {{ if .prefix -}}
              prefix: {{ .prefix | quote }}
              {{- end }}
            {{- end }}
          {{- end }}
          {{- if .Values.collectstatic.resources }}
          resources:
{{ toYaml .Values.collectstatic.resources | indent 12 }}
          {{- end }}
          {{- if .Values.collectstatic.volumeMounts }}
          volumeMounts:
            {{- range .Values.collectstatic.volumeMounts }}
            - name: {{ .name }}
              mountPath: {{ .mountPath }}
              {{- if .subPath }}
              subPath: {{ .subPath }}
              {{- end }}
              {{- if .readOnly }}
              readOnly: {{ .readOnly }}
              {{- end }}
            {{- end }}
          {{- end }}
      {{- if .Values.collectstatic.volumes }}
      volumes:
        {{- range .Values.collectstatic.volumes }}
        - name: {{ .name }}
          {{- if .hostPath }}
          hostPath:
            path: {{ .hostPath }}
          {{- else if .configMap }}
          configMap:
            name: {{ .configMap.name }}
            items:
              {{- range .configMap.items }}
              - key: {{ .key }}
                path: {{ .path }}
              {{- end }}
          {{- else if .persistentVolumeClaim }}
          persistentVolumeClaim:
            claimName: {{ .persistentVolumeClaim.claimName }}
          {{- else if .nfs }}
          nfs:
            path: {{ .nfs.path }}
            readOnly: {{ .nfs.readOnly }}
            server: {{ .nfs.server }}
          {{- else if .secret }}
          secret:
            secretName: {{ .secret.secretName }}
          {{- else }}
          emptyDir: {}
          {{- end }}
        {{- end }}
      {{- end }}
    {{- if .Values.nodeSelector }}
      nodeSelector:
{{ toYaml .Values.nodeSelector | indent 8 }}
    {{- end }}
{{- end }}
